@page "/publicdashboard"
@using Microsoft.AspNetCore.SignalR.Client
@inject HubConnection _HubConnection

@inject HttpClient Http
@inject ILocalStorage_Services _LocalStorage
@inject IGlobalElements_Services _GlobalElements
@inject IGlobalConfiguration_Services _GlobalConfiguration
@inject IToast_Services _Toast
@layout EmptyLayout


<Title Value="@_Title"></Title>

<a @onclick="(async ()=> await LoadInformation())" style="height: 100%;">


    @if (_Loading)
    {
        <div class="div-background-loader">
            <img src="/img/logo.png" />
        </div>
    }
    else
    {
        <div class="div-background-loader slide-out-fwd-center">
            <img src="/img/logo.png" />
        </div>
    }

    <div class="d-flex-center h-100 p-4" style="padding-top: 6rem !important;">

        <div class="row">


            @*<_Loading />*@

            <div class="col-6 mb-4">
                @{
                    string classVolt = string.Empty;
                    if (_GlobalElements.Station.Station_Voltage <= _GlobalElements.Station.Station_MinVoltage)
                    {
                        classVolt = "bg-gradient-danger";
                    }
                }

                <div class="card transparent-card @classVolt">
                    <div class="text">
                        <p class="text-sm mb-2 text-capitalize font-weight-bold">Station's Battery</p>

                        @if (_GlobalElements.Station.Station_Charging && (_GlobalElements.Station.Station_Voltage > (decimal)12.5))
                        {
                            <h6 class="font-weight-bolder mb-0" title="Connected and charging">
                                Connected
                            </h6>
                            <span class="text-sm font-weight-bolder">@_GlobalElements.Station.Station_Voltage v</span>
                        }
                        else if (_GlobalElements.Station.Station_Charging && (_GlobalElements.Station.Station_Voltage > _GlobalElements.Station.Station_MinVoltage))
                        {
                            <h6 class="text-success font-weight-bolder mb-0" title="Charging">
                                Charging
                            </h6>
                            <span class="text-success text-sm font-weight-bolder">@_GlobalElements.Station.Station_Voltage v</span>
                        }
                        else if (_GlobalElements.Station.Station_Charging && (_GlobalElements.Station.Station_Voltage < _GlobalElements.Station.Station_MinVoltage))
                        {
                            <h6 class="text-success font-weight-bolder mb-0" title="Charging">
                                Charging
                            </h6>
                            <span class="text-danger text-sm font-weight-bolder">@_GlobalElements.Station.Station_Voltage v</span>
                        }
                        else
                        {
                            <h6 class="text-danger font-weight-bolder mb-0" title="Charging">
                                Not connected
                            </h6>
                            <span class="text-danger text-sm font-weight-bolder">@_GlobalElements.Station.Station_Voltage v</span>
                        }
                    </div>

                    @if (_GlobalElements.Station.Station_Voltage > _GlobalElements.Station.Station_MinVoltage)
                    {
                        <div class="icon icon-shape bg-gradient-info shadow text-center border-radius-md" title="Station's voltage is correct.">
                            <i class="fa-solid fa-charging-station text-lg opacity-10" aria-hidden="true"></i>
                        </div>
                    }
                    else
                    {
                        <div class="icon icon-shape bg-gradient-danger shadow text-center border-radius-md parpadear" title="Station's voltage is below of minimum.">
                            <i class="fa-solid fa-charging-station text-lg opacity-10" aria-hidden="true"></i>
                        </div>
                    }
                </div>
            </div>

            <div class="col-6 mb-4">
                <div class="card transparent-card">
                    <div class="text">
                        <p class="text-sm mb-1 text-capitalize font-weight-bold">Drone OnHome</p>
                        @if (_GlobalElements.Station.Drone_Charging)
                        {
                            <h6 class="text-success font-weight-bolder mb-0">
                                Charging
                            </h6>
                            @*<span class="text-success text-sm font-weight-bolder">@_GlobalElements.Station.Drone_Voltage v</span>*@
                            <span class="text-success text-sm font-weight-bolder">97 %</span>
                        }
                        else
                        {
                            <h6 class="font-weight-bolder mb-0">
                                Not present
                            </h6>
                        }
                    </div>

                    @if (_GlobalElements.Station.Drone_Charging)
                    {
                        <div class="icon icon-shape bg-gradient-info shadow text-center border-radius-md" title="Charging drone">
                            <_SVG_Drone />
                        </div>
                    }
                    else
                    {
                        <div class="icon icon-shape bg-gradient-info shadow text-center border-radius-md" title="Not present">
                            <_SVG_Drone />
                        </div>
                    }
                </div>
            </div>

            <div class="col-6 mb-4">
                <div class="card transparent-card">
                    <div class="text">
                        <p class="text-sm mb-1 text-capitalize font-weight-bold">Equipments</p>
                        <h4 class="font-weight-bolder mb-0">
                            1
                            <span class="text-sm font-weight-bolder" title="Total equipments: 3">3</span>
                        </h4>
                    </div>
                    <div class="icon icon-shape bg-gradient-info shadow text-center border-radius-md" title="Total equipments: @_GlobalElements.Station.CountEquipments">
                        <i class="fa-solid fa-satellite-dish text-lg opacity-10" aria-hidden="true"></i>
                    </div>
                </div>
            </div>

            @*<div class="col-6 mb-4">
            <div class="card transparent-card">
            <div class="text">
            <p class="text-sm mb-1 text-capitalize font-weight-bold">Equipments</p>
            <h4 class="font-weight-bolder mb-0">
            @_GlobalElements.Station.CountEquipmentsActives
            <span class="text-sm font-weight-bolder" title="Total equipments: @_GlobalElements.Station.CountEquipments">@_GlobalElements.Station.CountEquipments</span>
            </h4>
            </div>
            <div class="icon icon-shape bg-gradient-info shadow text-center border-radius-md" title="Total equipments: @_GlobalElements.Station.CountEquipments">
            <i class="fa-solid fa-satellite-dish text-lg opacity-10" aria-hidden="true"></i>
            </div>
            </div>
            </div>
            *@

            <div class="col-6 mb-4">
                <div class="card transparent-card">
                    <div class="text">
                        <p class="text-sm mb-1 text-capitalize font-weight-bold">Remote Server</p>
                        @if (_GlobalElements.Station.InternetConnected)
                        {
                            <h6 class="text-success font-weight-bolder mb-0">
                                Connected
                            </h6>
                        }
                        else
                        {
                            <h6 class="text-danger font-weight-bolder mb-0">
                                Disconnected
                            </h6>
                        }
                    </div>
                    @if (_GlobalElements.Station.InternetConnected)
                    {
                        <div class="icon icon-shape bg-gradient-info shadow text-center border-radius-md" title="Internet connection is okey.">
                            <i class="fa-solid fa-wifi text-lg opacity-10" aria-hidden="true"></i>
                        </div>
                    }
                    else
                    {
                        <div class="icon icon-shape bg-gradient-danger shadow text-center border-radius-md parpadear" title="Could not connect to internet.">
                            <i class="fa-solid fa-wifi text-lg opacity-10" aria-hidden="true"></i>
                        </div>
                    }
                </div>
            </div>
        </div>

    </div>

</a>

@code {

    #region Variables
    //private string _StyleFirstAccess { get; set; }
    private bool _Loading { get; set; } = true;
    //private bool _Ready { get; set; } = true;
    private string _Title { get; set; } = "Dashboard";
    #endregion



    #region Mostrar informacion

    protected override async Task OnInitializedAsync()
    {
        _GlobalElements.PermissionForSection = await _LocalStorage.GetPermissionForSection(SystemSectionsEnum.Dashboard);
        if (!_GlobalElements.PermissionForSection.Read) StateHasChanged();

        _GlobalElements.Station = new Station_Request();

        await LoadInformation();
    }

    public async Task LoadInformation()
    {

        Task.Run(() =>
        {
            _Loading = true;
            StateHasChanged();

            Task.Delay(3000);

            _Loading = false;
            StateHasChanged();
        });







        //try
        //{
        //    _Loading = true;
        //    StateHasChanged();

        //    Task.Delay(3000);


        //    _GlobalElements.Station = new Station_Request();
        //    //var statusResponse = await HttpClass.GetSet(Http, URLsClient.SearchStation, _Toast, _GlobalElements);
        //    //if (statusResponse)
        //    //{
        //    //    _Ready = true;
        //    //    UpdateView(_GlobalElements.Station);
        //    //}
        //}
        //catch (Exception e)
        //{
        //    _GlobalConfiguration.NuevoLog("The information could not be loaded from stations", SystemActionsEnum.LoadInformation, e, SystemErrorCodesEnum.Error);
        //}
        //finally
        //{
        //    _Loading = false;
        //    StateHasChanged();
        //}
    }

    public void UpdateView(Station_Request informacion)
    {
        try
        {
            //_Loading = true;
            //StateHasChanged();

            _GlobalElements.Station = informacion;

            //_Loading = false;
            StateHasChanged();
        }
        catch (Exception) { }
    }

    public void UpdateView() => StateHasChanged();

    #endregion

}