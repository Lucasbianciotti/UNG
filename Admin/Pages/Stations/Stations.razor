@page "/stations"

@inject HttpClient Http
@inject ILocalStorage_Services _LocalStorage
@inject IGlobalElements_Services _GlobalElements
@inject IGlobalConfiguration_Services _GlobalConfiguration
@inject IToast_Services _Toast

@attribute [Authorize]

<Title Value="@_Title"></Title>


<SfDialog IsModal="false" CloseOnEscape="false"
          Target="#content-body"
          CssClass="dialog-max-content"
          @bind-Visible="@PrincipalCard_IsVisible">

    <DialogTemplates>
        <Content>

            <div class="col-12">
                <SfCard>
                    <div class="card mb-4">

                        <div class="card-header pb-0 d-flex justify-content-between">
                            <h6>@_Title</h6>

                            <div class="p-0">
                                <button @onclick="(async () => await LoadInformation())" class="btn btn-sm btn-outline-info mr-1" type="button" title="Reload information">
                                    <i class="fas fa-redo-alt"></i>
                                </button>

                                <button @onclick="(()=>_Card_EditionStation.OpenWindow_CreateStation())" class="btn btn-sm btn-outline-success" type="button" title="Add station">
                                    <i class="fa-solid fa-plus"></i>
                                </button>
                            </div>

                        </div>


                        <CardContent>

                            <div class="card-body px-0 pt-0 pb-2">
                                <div class="table-responsive p-0">

                                    @if (_Loading)
                                    {
                                        <div class="mt-3">
                                            <_Loading />
                                        </div>
                                    }
                                    else
                                    {
                                        if (_GlobalElements.PermissionForSection.Read)
                                        {
                                            if (_Ready)
                                            {
                                                if (_GlobalElements.InformationOfStations.ListOfStations == null || _GlobalElements.InformationOfStations.ListOfStations.Count == 0)
                                                {
                                                    <div class="justify-content-md-center align-items-center">
                                                        <div class="alert-pers-info-min mb-2 text-center" role="alert">
                                                            <strong class="alert-text">Not found stations.</strong>
                                                            @if (_GlobalElements.PermissionForSection.Read && _GlobalElements.PermissionForSection.Create)
                                                            {
                                                                <p class="alert-text">Add station, click <a class="text-primary" @onclick="@(() => _Card_EditionStation.OpenWindow_CreateStation())">here</a></p>
                                                            }
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="overflow-scroll">
                                                        <SfGrid DataSource="@_GlobalElements.InformationOfStations.ListOfStations"
                                                Toolbar="@(new List<string>() {"Search"})"
                                                ShowColumnChooser="false"
                                                AllowResizing="true"
                                                AllowSorting="true"
                                                AllowExcelExport="false"
                                                AllowPdfExport="false"
                                                AllowPaging="true"
                                                AllowReordering="false"
                                                Width="100%"
                                                Height="100%" @ref="_Grid">


                                                            <GridPageSettings PageCount="5" PageSizes="true" />

                                                            <GridColumns>

                                                                <GridColumn HeaderText="Actions"
                                                            TextAlign="TextAlign.Center"
                                                            Width="120">
                                                                    <Template>
                                                                        @{
                                                            var data = (context as Station_Request);
                                                            @if (_GlobalElements.PermissionForSection.Read && _GlobalElements.PermissionForSection.Modify)
                                                            {
                                                                <button @onclick="(() => OnCommandClicked(data, CommandButtonType.Edit))" type="button" class="e-btn e-icon-btn btn btn-outline-info btn-min" title="Edit station" style="margin: 5px !important">
                                                                    <i class="fa-solid fa-pen-to-square"></i>
                                                                </button>
                                                            }

                                                            //@if (_GlobalElements.PermissionForSection.Read && _GlobalElements.User.PermissionForDelete)
                                                            //{
                                                            //    <button @onclick="(() => OnCommandClicked(data, CommandButtonType.Delete))" type="button" class="e-control e-btn e-lib btn btn-outline-danger btn-min e-edit-delete e-Deletebutton e-icon-btn" style="margin-right: 5px !important"><i class="e-icons e-delete e-btn-icon"></i></button>
                                                            //}
                                                        }
                                                    </Template>
                                                </GridColumn>

                                                <GridColumn Field=@nameof(Station_Request.ID)
                                                            HeaderText="ID"
                                                            Visible="false"
                                                            TextAlign="TextAlign.Center"
                                                            IsPrimaryKey="true" />

                                                <GridColumn Field=@nameof(Station_Request.Name)
                                                            HeaderText="Name"
                                                            TextAlign="TextAlign.Center" />


                                                <GridColumn Field=@nameof(Station_Request.Location)
                                                            HeaderText="Location"
                                                            TextAlign="TextAlign.Center">
                                                    <Template>
                                                        @{
                                                            var item = (context as Station_Request);
                                                            @if (item.Location_GPS_Lat != 0 && item.Location_GPS_Lon != 0)
                                                            {
                                                                <span title="Lat: @item.Location_GPS_Lat Lon: @item.Location_GPS_Lon">@item.Location</span>
                                                            }
                                                            else
                                                            {
                                                                <span title="Location GPS not found">@item.Location</span>
                                                            }
                                                        }
                                                    </Template>
                                                </GridColumn>


                                                <GridColumn Field=@nameof(Station_Request.IDstatus)
                                                            HeaderText="Status"
                                                            TextAlign="TextAlign.Center"
                                                            AutoFit="true">
                                                    <Template>
                                                        @{
                                                            var data = (context as Station_Request);
                                                            if (data.IDstatus == StationStatusEnum.Enabled)
                                                            {
                                                                <SfButton Content="@data.IDstatus" CssClass="e-outline e-success btn-rounded" />
                                                            }
                                                            else
                                                            {
                                                                <SfButton Content="@data.IDstatus" CssClass="e-outline e-warning btn-rounded" />
                                                            }
                                                        }
                                                    </Template>
                                                </GridColumn>


                                                <GridColumn Field=@nameof(Station_Request.CountEquipments)
                                                            HeaderText="Equipments"
                                                            TextAlign="TextAlign.Center"
                                                            AutoFit="true">
                                                    <Template>
                                                        @{
                                                            var item = (context as Station_Request);
                                                            <span>@item.CountEquipments</span>
                                                        }
                                                    </Template>
                                                </GridColumn>

                                                <GridColumn HeaderText="Equipment's actions"
                                                            TextAlign="TextAlign.Center"
                                                            AutoFit="true">
                                                    <Template>
                                                        @{
                                                            var item = (context as Station_Request);
                                                            <button @onclick="(() => _Card_ListOfEquipments.OpenWindows_ViewEquipments(item))" type="button" class="e-btn e-icon-btn btn btn-outline-primary btn-min" title="View equipments" style="margin: 5px !important">
                                                                <i class="fa-solid fa-magnifying-glass"></i>
                                                            </button>

                                                            <button @onclick="(() =>_Card_EditionEquipment.OpenWindow_AddEquipment(item, true))" type="button" class="e-btn e-icon-btn btn btn-outline-success btn-min" title="Add equipment" style="margin: 5px !important">
                                                                <i class="fa-solid fa-plus"></i>
                                                            </button>
                                                        }
                                                    </Template>
                                                </GridColumn>



                                            </GridColumns>

                                            <GridTemplates>

                                                <EmptyRecordTemplate>
                                                    <div class="justify-content-md-center align-items-center">
                                                        <div class="alert-pers-info-min mb-2 text-center" role="alert">
                                                            <strong class="alert-text">Not found stations.</strong>
                                                            @if (_GlobalElements.PermissionForSection.Read && _GlobalElements.PermissionForSection.Create)
                                                            {
                                                                <p class="alert-text">Add station, click <a class="text-primary" @onclick="@(() => _Card_EditionStation.OpenWindow_CreateStation())">here</a></p>
                                                            }
                                                        </div>
                                                    </div>
                                                </EmptyRecordTemplate>

                                                @*<DetailTemplate>
                                                    //    @{
                                                    //        var model = (context as Station_Request);
                                                    //    }

                                                    //    <div class="col-10 card p-1 mt-1 mb-1 border-shadow">
                                                    //        <div class="card-content">
                                                    //        </div>
                                                    //    </div>
                                                    //</DetailTemplate>
                                                    // *@
                                            </GridTemplates>

                                        </SfGrid>
                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <_FailedToLoad />
                                            }
                                        }
                                        else
                                        {
                                            <_SinPermisos />
                                        }
                                    }

                                </div>
                            </div>

                        </CardContent>
                    </div>


                </SfCard>
            </div>
        </Content>
    </DialogTemplates>

    <DialogAnimationSettings Effect="@_GlobalConfiguration.AnimationEffect" Duration=@_GlobalConfiguration.AnimationTime />
    <DialogPositionData X="center" Y="start"></DialogPositionData>
</SfDialog>


<_Card_ListOfEquipments @ref="_Card_ListOfEquipments"
                        _Page="this" />

<_Card_EditionStation @ref="_Card_EditionStation"
                      _Page="this" />

<_Card_EditionEquipment @ref="_Card_EditionEquipment"
                        _Page="this" />


@code {
    #region Variables
    public _Card_ListOfEquipments _Card_ListOfEquipments = new();
    private _Card_EditionStation _Card_EditionStation = new();
    public _Card_EditionEquipment _Card_EditionEquipment = new();

    private bool _Loading { get; set; } = true;
    private bool _Ready { get; set; } = true;
    private string _Title { get; set; } = "Stations";
    public bool PrincipalCard_IsVisible { get; set; } = true;

    private SfGrid<Station_Request> _Grid = new();
    #endregion

    #region Mostrar informacion

    protected override async Task OnInitializedAsync()
    {
        PrincipalCard_IsVisible = true;

        _GlobalElements.PermissionForSection = await _LocalStorage.GetPermissionForSection(SystemSectionsEnum.Data);
        if (_GlobalElements.PermissionForSection.Read)
            await LoadInformation();
    }

    public async Task LoadInformation()
    {
        try
        {
            _Ready = false;
            _Loading = true;
            StateHasChanged();

            var statusResponse = await HttpClass.GetSet(Http, URLsAdmin.Stations, _Toast, _GlobalElements, _GlobalElements.InformationOfStations.Filters);
            if (statusResponse)
            {
                _Ready = true;
                UpdateView(_GlobalElements.InformationOfStations);
            }
        }
        catch (Exception e)
        {
            _GlobalConfiguration.NuevoLog("The information could not be loaded from stations", SystemActionsEnum.LoadInformation, e, SystemErrorCodesEnum.Error);
            _Toast.ShowError("The information could not be loaded.");
        }
        finally
        {
            _Loading = false;
            StateHasChanged();
        }
    }

    public void UpdateView(InformationOfStation_Request informacion)
    {
        try
        {
            _Loading = true;
            StateHasChanged();

            _GlobalElements.InformationOfStations.ListOfStations = informacion.ListOfStations;
            //_ResumenCVIG_childComponent.ActualizarVista(informacion);

            _Loading = false;
            StateHasChanged();

            _Grid.Refresh();
        }
        catch (Exception) { }
    }

    public void UpdateView() => StateHasChanged();

    #endregion


    #region Grilla

    public void OnCommandClicked(Station_Request args, CommandButtonType comando)
    {
        if (comando == CommandButtonType.Edit)
        {
            if (_GlobalElements.PermissionForSection.Modify)
                _Card_EditionStation.OpenWindow_ModifyStation(args);
            else
                _Toast.ShowWarning("Not found permissions.");
        }
        //else if (comando == CommandButtonType.Delete)
        //{
        //    if (_GlobalElements.User.PermissionForDelete)
        //        AbrirModal_Delete(args);
        //    else
        //        _Toast.ShowWarning("No tiene permiso para eliminar.");
        //}
    }

    #endregion Grilla



}
